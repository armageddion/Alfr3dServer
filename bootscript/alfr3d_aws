#!/bin/bash
#
# description: alfr3d init script
#
### BEGIN INIT INFO
# Provides:          alfr3d
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: alfr3d daemon
# Description:       alfr3d daemon
# Start the service alfr3d
### END INIT INFO

RUNAS=root
INITSAY="all alfred services have been initialized"
ENDSAY="Stopping all alfred services"
HOMEDIR=/home/ubuntu/Alfr3dGit

BOTTLEPIDNAME=alfr3dBottle
BOTTLEPIDFILE=/var/run/$BOTTLEPIDNAME.pid
MONGOADMINPIDNAME=alfr3dMongoAdmin
MONGOADMINPIDFILE=/var/run/$MONGOADMINPIDNAME.pid

start() {
    echo "Starting alfr3d services: "
    ### Create the lock file ###
    touch /var/lock/alfr3d
    echo

    ### Mount Samba share ###
    #echo "mounting aduio shares"
    #sudo mount -t cifs -o user=alfr3d,password=alfr3d //10.0.0.3/Audio /home/alfr3d/audio/ > $HOMEDIR/log/init.log &

    ### Start the daemon ###
    #echo "starting alfr3d daemon"
    #python $HOMEDIR/daemon/alfr3ddaemon.py start > $HOMEDIR/log/init.log &

    ### Start Node.js server ###
    #echo "starting node server"
    #node $HOMEDIR/alfr3d.js/alfr3dServer.js > $HOMEDIR/log/init.log &

    ### Initialize resftul interface ###
    if [ -f /var/run/$BOTTLEPIDNAME ] && kill -0 $(cat /var/run/$BOTTLEPIDNAME);
    then
	echo 'restful interface already running' >&2
    else
	echo "initializing restful interface" >&2
	local CMD="python $HOMEDIR/run/alfr3dServerBottle.py > $HOMEDIR/log/init.log & echo \$!"
	su -c "$CMD" $RUNAS > "$BOTTLEPIDFILE"
	echo "restful interface started" >&2
    fi

    ### Initialize Mongo Express admin UI ###
    if [ -f /var/run/$MONGOADMINPIDNAME ] && kill -0 $(cat /var/run/$MONGOADMINPIDNAME);
    then
        echo 'mongo admin already running' >&2
    else
        echo "initializing mongo admin interface" >&2
        local CMD="node /home/ubuntu/node_modules/mongo-express/app > $HOMEDIR/log/init.log & echo \$!"
        su -c "$CMD" $RUNAS > "$MONGOADMINPIDFILE"
        echo "mongo admin interface started" >&2
    fi

    #sudo mplayer -ao alsa:device=default -really-quiet -noconsolecontrols "http://translate.google.com/translate_tts?tl=en&q=$INITSAY"
}
# Restart the service alfr3d
stop() {
    echo "Stopping alfr3d services: "
    #sudo mplayer -ao alsa:device=default -really-quiet -noconsolecontrols "http://translate.google.com/translate_tts?tl=en&q=$ENDSAY"
    #python $HOMEDIR/daemon/alfr3ddaemon.py stop > $HOMEDIR/log/init.log &

    # stop python bottle server
    if [ ! -f "$BOTTLEPIDFILE" ] || ! kill -0 $(cat "$BOTTLEPIDFILE");
    then
	echo "restful interface is not running" >&2
    else
	echo "stopping restful interface..." >&2
	kill -15 $(cat "$BOTTLEPIDFILE") && rm -f "$BOTTLEPIDFILE"
	echo "restful interface stopped"
    fi

    # stop node mongo express module
    if [ ! -f "$MONGOADMINPIDFILE" ] || ! kill -0 $(cat "$MONGOADMINPIDFILE");
    then
        echo "mongo admin interface is not running" >&2
    else
        echo "stopping mongo admin interface..." >&2
        kill -15 $(cat "$MONGOADMINPIDFILE") && rm -f "$MONGOADMINPIDFILE"
        echo "mongo admin interface stopped"
    fi
    ### Now, delete the lock file ###
    rm -f /var/lock/alfr3d
    echo
}
status() {
    echo "Checking Alfr3d services"
    if [ -z "`ps axf | grep alfr3ddaemon.py | grep -v grep`" ];
    then
       echo "Alfr3d Daemon is dead"
    else
       echo "Alfr3d Daemon is running"
    fi
    if [ -z "`ps axf | grep alfr3dServer.js | grep -v grep`" ];
    then
       echo "Alfr3d Node Server is dead"
    else
       echo "Alfr3d Node Server is running"
    fi
    if [ -z "`ps axf | grep alfr3dBottle.py | grep -v grep`" ];
    then
       echo "Alfr3d Restful Interface is dead"
    else
       echo "Alfr3d Restful Interface is running"
    fi
    if [ -z "`ps axf | grep /home/alfr3d/node_modules/mongo-express/app | grep -v grep`" ];
    then
       echo "Mongo Admin UI is dead"
    else
       echo "Mongo Admin UI is running"
    fi
}
### main logic ###
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status alfr3d
        ;;
  restart|reload|condrestart)
        stop
        start
        ;;
  *)
        echo $"Usage: $0 {start|stop|restart|reload|status}"
        exit 1
esac
exit 0

